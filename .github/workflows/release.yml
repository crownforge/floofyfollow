name: Publish Package and Release

on:
  push:
    tags:
      - 'v*' # Trigger on tags that start with 'v', like v1.0.0

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch all history for release notes
    
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Update version in pom.xml
      run: |
        # Use the version from the tag (without the 'v' prefix)
        VERSION=${{ steps.get_version.outputs.VERSION }}
        # Update the version in pom.xml
        mvn versions:set -DnewVersion=$VERSION -DgenerateBackupPoms=false
    
    - name: List files in directory
      run: ls -la
    
    - name: Build with Maven
      run: mvn -B clean package --file pom.xml
    
    - name: Verify JAR file exists
      run: ls -la target/
    
    - name: Publish to GitHub Packages
      run: mvn -B deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Generate release notes
      id: generate_release_notes
      run: |
        # Get the previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        
        if [ -z "$PREVIOUS_TAG" ]; then
          # If there's no previous tag, get all commits
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s (%h)" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          # Get commits between the previous tag and this tag
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        fi
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## What's Changed
          ${{ steps.generate_release_notes.outputs.RELEASE_NOTES }}
          
          ## Installation
          
          ### Direct Download
          1. Download the JAR file from the assets below
          2. Place it in your server's `plugins` directory
          3. Restart your server
          
          ### Maven
          ```xml
          <dependency>
            <groupId>org.crownforge</groupId>
            <artifactId>floofyfollow</artifactId>
            <version>${{ steps.get_version.outputs.VERSION }}</version>
          </dependency>
          ```
          
          You'll need to add GitHub Packages as a repository in your pom.xml:
          ```xml
          <repositories>
            <repository>
              <id>github</id>
              <url>https://maven.pkg.github.com/crownforge/floofyfollow</url>
            </repository>
          </repositories>
          ```
        files: target/floofyfollow-*.jar
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
